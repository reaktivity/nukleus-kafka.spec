#
# Copyright 2016-2017 The Reaktivity Project
#
# The Reaktivity Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

property newNetworkRouteRef  ${nuklei:newReferenceId()} # external

property networkConnect "nukleus://kafka/streams/source"
property networkConnectWindow 8192

property newMetadataRequestId ${kafka:newRequestId()}
property newRequestId ${kafka:newRequestId()}
property maximumWaitTime 500
property maximumBytes 65535
property maximumBytesTest0 8192

# Metadata stream
connect await ROUTED_SERVER
        ${networkConnect}
  option nukleus:route ${newNetworkRouteRef}
  option nukleus:window ${networkConnectWindow} 
  option nukleus:transmission "duplex"
  option nukleus:byteorder "network"

write nukleus:begin.ext ${tcp:beginExtRemoteHost("broker1", 9093)}

connected

write 21        # Size int32
write 3s     # ApiKey int16 (Metadata)
write 5s     # ApiVersion int16
write ${newMetadataRequestId} # CorrelationId int32
write -1s       # ClientId string (null)
write 1         # [TopicName] array length
  write 4s "test"
write [0x00]    # allow_auto_topic_creation (boolean)

read 85         # Size int32
read ${newMetadataRequestId} # CorrelationId int32
read [0..4]     # throttle_time_ms int32
read 1          # brokers array length
  read 1        # broker id
  read 7s "broker1"
  read 9093     # port int32
  read -1s      # rack string (null)
read 9s "cluster 1"
read 1          # controller broker id
read 1          # topic array length
  read 0s       # error code
  read 4s "test"
  read [0x00]   # is_internal boolean
  read 1        # partition array length
    read 0s     # error code
    read 0      # partition
    read 1      # leader
    read 0      # replicas array (empty)
    read -1     # isr array (null)
    read 0      # offline replicas array (empty)
read notify METADATA_RECEIVED

write 41        # Size int32
write 32s       # ApiKey int16 (DescribeConfigs)
write 0s        # ApiVersion int16
write ${newMetadataRequestId} # CorrelationId int32
write -1s       # ClientId string (null)
write 1         # resources count
write [0x02]    # resource type (topic is 2, from org/apache/kafka/common/resource/ResourceType.java)
write 4s "test" # topic name
write 1         # config names count
write 14s "cleanup.policy"  # config name

read 54         # Size int32
read ${newMetadataRequestId} # CorrelationId int32
read [0..4]     # throttle_time_ms int32
read 1          # resources count
read 0s         # error code
read -1s        # error message
read [0x02]     # resource type (topic)
read 4s "test"  # topic name
read 1          # config entries count
read 14s "cleanup.policy"   # config name
read 6s "delete"            # config value
read [0x00]     # read_only boolean
read [0x01]     # is_default boolean
read [0x00]     # is_sensitive boolean

# Fetch stream
connect await METADATA_RECEIVED
        ${networkConnect}
  option nukleus:route ${newNetworkRouteRef}
  option nukleus:window ${networkConnectWindow} 
  option nukleus:transmission "duplex"
  option nukleus:byteorder "network"

write nukleus:begin.ext ${tcp:beginExtRemoteHost("broker1", 9093)}

connected

write 65
write 1s
write 5s
write ${newRequestId}
write -1s
write -1
write ${maximumWaitTime}
write 1
write ${maximumBytes}
write [0x00]
write 1
write 4s "test"
write 1
write 0
write 0L
write -1L
write ${maximumBytesTest0}

read 144
read ${newRequestId}
read [0..4]
read 1
read 4s "test"
read 1
read 0
read 0s
read 999L       # high watermark
read -1L
read 0L
read -1
read 84         # length of record set (15 too short for last record)
read 0L
read 72         # length of record batch
read 0
read [0x02]
read 0x4e8723aa
read 0s
read 10         # last offset delta
read (long:timestamp)
read ${timestamp}
read -1L
read -1s
read -1
read 2
read ${kafka:varint(18)}
read [0x00]
read ${kafka:varint(0)}     # timestamp delta
read ${kafka:varint(0)}     # offset delta
read ${kafka:varint(-1)}
read ${kafka:varint(12)}
read "Hello, world"
read [0x00]
read ${kafka:varint(18)}
read [0x00]
read ${kafka:varint(10)}    # timestamp delta
read ${kafka:varint(10)}     # offset delta
# record truncated (15 remaining bytes missing)


# second fetch request
write 65
write 1s
write 5s
write ${newRequestId}
write -1s
write -1
write ${maximumWaitTime}
write 1
write ${maximumBytes}
write [0x00]
write 1
write 4s "test"
write 1
write 0
write 10L
write -1L
write ${maximumBytesTest0}

read 140
read ${newRequestId}
read [0..4]
read 1
read 4s "test"
read 1
read 0
read 0s
read 999L       # high watermark
read -1L
read 0L         # log start offset
read -1
read 80         # length of record set
read 10L        # first offset
read 68         # length of record batch
read 0
read [0x02]
read 0x4e8723aa
read 0s
read 0          # last offset delta
read (long:timestamp)
read ${timestamp}
read -1L
read -1s
read -1
read 1
read ${kafka:varint(18)}
read [0x00]
read ${kafka:varint(0)}     # timestamp delta
read ${kafka:varint(0)}     # offset delta
read ${kafka:varint(-1)}
read ${kafka:varint(12)}
read "Hello, again"
read [0x00]
