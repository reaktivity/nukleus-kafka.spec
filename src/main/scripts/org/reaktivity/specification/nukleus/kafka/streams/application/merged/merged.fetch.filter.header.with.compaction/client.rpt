#
# Copyright 2016-2021 The Reaktivity Project
#
# The Reaktivity Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

connect "nukleus://streams/app#0"
    option nukleus:window 16
    option nukleus:transmission "half-duplex"

write nukleus:begin.ext ${kafka:beginEx()
                               .typeId(nukleus:id("kafka"))
                               .merged()
                                   .capabilities("FETCH_ONLY")
                                   .topic("test")
                                   .partition(0, 1)
                                   .filter()
                                       .header("header1", "value1")
                                       .build()
                                   .build()
                               .build()}

connected

read nukleus:data.ext ${kafka:matchDataEx()
                             .typeId(nukleus:id("kafka"))
                             .merged()
                                 .partition(0, 1, 5)
                                 .progress(0, 2)
                                 .key("key1")
                                 .header("header1", "value1")
                                 .build()
                             .build()}
read "Hello, world #A1"


read nukleus:data.ext ${kafka:matchDataEx()
                             .typeId(nukleus:id("kafka"))
                             .merged()
                                 .key("key1")
                                 .partition(0, 3, 5)
                                 .progress(0, 4)
                                 .header("header1", "value1")
                                 .build()
                             .build()}
read "Hello, world #A3"

read notify READ_MESSAGES

connect await READ_MESSAGES
        "nukleus://streams/app#0"
    option nukleus:window 16
    option nukleus:transmission "half-duplex"

write nukleus:begin.ext ${kafka:beginEx()
                               .typeId(nukleus:id("kafka"))
                               .merged()
                                   .capabilities("FETCH_ONLY")
                                   .topic("test")
                                   .partition(0, 1)
                                   .filter()
                                       .header("header2", "value2")
                                       .build()
                                   .build()
                               .build()}

connected


read nukleus:data.ext ${kafka:matchDataEx()
                             .typeId(nukleus:id("kafka"))
                             .merged()
                                 .partition(0, 2, 5)
                                 .progress(0, 3)
                                 .header("header2", "value2")
                                 .build()
                             .build()}
read "Hello, world #A2"


read nukleus:data.ext ${kafka:matchDataEx()
                             .typeId(nukleus:id("kafka"))
                             .merged()
                                 .partition(0, 4, 5)
                                 .progress(0, 5)
                                 .header("header2", "value2")
                                 .build()
                             .build()}
read "Hello, world #A4"
